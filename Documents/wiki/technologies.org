
* Angular
start here: https://angular.io/tutorial
curso vence sep 30!!: https://courses.edx.org/courses/course-v1:Microsoft+DEV314x+1T2019a/course/
ecommerce fast: https://www.youtube.com/watch?v=gLa2LxMdAPs
ecommerce: https://www.youtube.com/watch?v=9K15zC0gN2I
best ecommerce: https://medium.com/javascript-in-plain-english/how-to-create-an-app-using-angular-and-firebase-part-1-debb80f928ad
* CSS
curso: https://courses.edx.org/courses/course-v1:W3Cx+CSS.0x+3T2018/course/
* React 
ecommerce: https://www.youtube.com/watch?v=wPQ1-33teR4
npx create-react-app
** react elements
+ theres html  like syntax (jsx)
const element = (
   <h1 className="greetings">
      hello, world!
   </h1>
);
gets mapped to 
const element = React.createElement(
    'h1',
    {className: 'greeting'},
    'Hello, World'

** react Components

you always extend the component, always create a constructor and a render, and always export it,

class Menu extends Component {
  constructor(props) {
    super(props);

  }
  
  render() {
    return (
        //jsx
    );

  }
  export default Menu
** react router
yarn add react-router-dom

import { BrowserRouter } from 'react-router-dom';
<BrowserRouter>
      <div className="App">
        <Main />
      </div>
    </BrowserRouter>
* Javascript
* PHP
* Nodejs
** --dev-save
it creates/appends the package to devdependencies in package.json
* Rust
** docs
rustup doc
** compile
rustc filename
** create project
cargo new name_app --bin
** unit tests
cargo test

to create a test:

#[test]
fn add() {

    assert_eq!(2+2, 4);
}

** project docs
cargo doc --open

** iterators
have defined functions and work like this
(0..10).sum

** match (same as case)

the underscore _ means anything else

match variable {

    0=>0,
    1=>1,
    _=> final,

}
** loops
there are for and while,

there are also loop, which can be used in expressions like this:

    let mut result = 1;
    result = loop {
        result += 1;
        if result == 10 {
            break result * 2
        }
    };
    /// result = 20

