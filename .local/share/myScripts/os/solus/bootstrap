#!/bin/bash


#args: $1 WM:dwm or xmonad (not working), all: optional programs
#	   $2 all: optional programs

if [ "$1" == "-h" ] || [ "$1" == "--help" ]; then
  echo "Usage: sudo -E env 'PATH=\$PATH' `basename $0` [all] [optional] [hack] [old]"
  exit 0
fi

user="$SUDO_USER"

#================
# INSTALL OHMYZSH
#================
echo "y" | sudo -u "$user" sh -c "$(sudo -u $user curl -fsSL https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"
sudo eopkg up -y
sudo eopkg it -y git
rm -rf .zshrc .zsh_history
cp ../../../../../../dotfiles/* "$HOME"


#=======================
# ADD ACCESS TO SUDOERS
#=======================
awk -i inplace -v user="$user" '/#includedir /etc/sudoers.d/{print; print user " ALL=(ALL) NOPASSWD:ALL";next}1' /etc/sudoers

sudo -u $user git clone https://github.com/Akuseru1/Wiki "$HOME/.local/share/wiki"


source "$HOME/.config/zsh/.zprofile"

sudo -u $user mkdir -p "$BACKUPS" "$HOME/.local/bin" "$HOME/Pictures/Screenshots" "$HOME/Master/Data/docker/volumes"

# install packages
packages=$(awk '{ if (substr($1,1,1) != "#" ) printf "%s ", $0}' packages)
eopkg install -y -c system.devel
eopkg install -y $packages

#========================
# INSTALL WINDOW MANAGER
#========================

# if [ "$1" == "dwm" ]; then
WM/dwm
DM/setupDwm
# fi

# if [ "$1" == "xmonad" ]; then
#    WM/xmonad
   # DM/setupXmonad
# fi

find init/* -type f -exec {} \;

# check latest nvm link
# this is for nvm, otherwise just install npm and do npm install -g neovim
sudo -u $user curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.36.0/install.sh | zsh
source "$HOME/.config/nvm/nvm.sh"
curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.36.0/install.sh | zsh
nvm install node

#======================================================
# BUILD SUCKLESS PROGRAMS AND PROGS NOT IN REPOSITORIES
#======================================================
find build/main/* -exec {} \;

#================
# OPTIONAL PROGS
#================
if [ "$1" == "all" ] || [ "$1" == "optional" ] || [ "$2" == "optional" ]  || [ "$3" == "optional" ]; then
   find build/optional/* -exec {} \;;
fi

#========================
# BUILD HACKING PROGRAMS
#========================
if [ "$1" == "all" ] || [ "$1" == "hack" ] || [ "$2" == "hack" ]  || [ "$3" == "hack" ]; then
   find build/hack/* -exec {} \;;
fi

if [ "$1" == "old" ] || [ "$2" == "old" ]  || [ "$3" == "old" ]; then
   find build/old/* -exec {} \;;
fi

#==========
# VIM-PLUG
#==========
cd "$HOME/.config/nvim" || exit
sudo -u $user sh -c 'curl -fLo "${XDG_DATA_HOME:-$HOME/.local/share}"/nvim/site/autoload/plug.vim --create-dirs \
       https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim'
# fixes npm bug
chown -R 1000:1000 "$HOME/.npm"
nvim -c 'PlugInstall'

flatpak remote-add --if-not-exists flathub https://dl.flathub.org/repo/flathub.flatpakrepo

# so it uses docker without sudo
usermod -a -G docker $user

# logout and login
# systemctl restart display-manager
